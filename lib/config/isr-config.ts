// lib/config/isr-config.ts
import { unstable_cache } from 'next/cache';

/**
 * üöÄ ISR CONFIGURATION FOR NEXT.JS 15.2.4
 * Configura√ß√µes centralizadas para Incremental Static Regeneration
 * Compat√≠vel com App Router e Supabase SSR
 */

// üéØ ENVIRONMENT-BASED CONFIGURATION
const isDevelopment = process.env.NODE_ENV === 'development';
const isPreview = process.env.NEXT_PUBLIC_VERCEL_ENV === 'preview';

// ‚ö° ISR REVALIDATION TIMES (em segundos)
export const ISR_CONFIG = {
  // üè† P√°ginas principais
  pages: {
    blogHome: isDevelopment ? 300 : 900,        // 5min dev / 15min prod
    categoryList: isDevelopment ? 600 : 1800,   // 10min dev / 30min prod  
    articlePage: isDevelopment ? 300 : 3600,    // 5min dev / 1h prod
  },

  // üìÇ Cache por tipo de conte√∫do
  content: {
    articles: isDevelopment ? 300 : 1800,       // 30min prod - artigos mudam raramente
    categories: isDevelopment ? 600 : 3600,     // 1h prod - categorias s√£o est√°veis
    authors: isDevelopment ? 900 : 7200,        // 2h prod - autores s√£o muito est√°veis
    tags: isDevelopment ? 600 : 3600,           // 1h prod - tags s√£o moderadamente est√°veis
  },

  // üîÑ Estrat√©gias de gera√ß√£o
  generation: {
    // N√∫mero de p√°ginas a pr√©-gerar no build
    staticGeneration: {
      articles: isDevelopment ? 5 : 15,         // 5 em dev, 15 em prod
      categories: 'all',                        // Todas as categorias
    },
    
    // Comportamento para paths n√£o pr√©-gerados
    fallback: {
      dynamicParams: true,                      // Permite gerar on-demand
      notFoundBehavior: '404',                  // 404 para slugs inv√°lidos
    }
  }
};

// üè∑Ô∏è CACHE TAGS para invalida√ß√£o seletiva
export const CACHE_TAGS = {
  articles: 'artigos',
  categories: 'categorias', 
  authors: 'autores',
  tags: 'tags',
  seo: 'seo-data',
  images: 'images',
  // Tags compostas
  articleWithCategory: (categoria: string) => `artigo-${categoria}`,
  categoryWithArticles: (categoria: string) => `categoria-${categoria}`,
  // Tag global para ISR
  isr: 'isr-sync'
} as const;

// üìä SUPABASE CACHE CONFIG (adicionado para compatibilidade)
export const SUPABASE_CACHE_CONFIG = {
  CACHE_TAGS: CACHE_TAGS,
  ARTICLES_CACHE_TTL: 3600,
  CATEGORIES_CACHE_TTL: 7200,
  TAGS_CACHE_TTL: 1800,
  AUTHORS_CACHE_TTL: 86400,
};

// üìä PERFORMANCE MONITORING
export const ISR_METRICS = {
  // Logs de performance em desenvolvimento
  enableLogging: isDevelopment,
  
  // M√©tricas que queremos acompanhar
  track: {
    cacheHits: true,
    cacheMisses: true,
    generationTime: isDevelopment,
    revalidationEvents: true,
  },
  
  // Alertas de performance
  alerts: {
    slowGeneration: 5000,    // > 5s para gerar uma p√°gina
    highMissRate: 0.7,       // > 70% de cache miss
  }
};

// üîß UTILITY FUNCTIONS
export const getISRConfig = (pageType: keyof typeof ISR_CONFIG.pages) => {
  return {
    revalidate: ISR_CONFIG.pages[pageType],
    dynamicParams: ISR_CONFIG.generation.fallback.dynamicParams,
    tags: [CACHE_TAGS.isr],
  };
};

export const getContentCacheConfig = (contentType: keyof typeof ISR_CONFIG.content) => {
  return {
    revalidate: ISR_CONFIG.content[contentType],
    tags: [CACHE_TAGS[contentType], CACHE_TAGS.isr],
  };
};

// üö® DEVELOPMENT HELPERS
export const logISR = (context: string, message: string, data?: any) => {
  if (ISR_METRICS.enableLogging) {
    const timestamp = new Date().toISOString();
    const env = isDevelopment ? 'üöß DEV' : 'üöÄ PROD';
    console.log(`${env} [ISR ${context}] ${message}`, data ? data : '');
  }
};

// üîÑ CACHE INVALIDATION UTILITIES
export const invalidationStrategies = {
  // Quando um artigo √© publicado/editado
  onArticleChange: [CACHE_TAGS.articles, CACHE_TAGS.isr],
  
  // Quando uma categoria √© modificada  
  onCategoryChange: [CACHE_TAGS.categories, CACHE_TAGS.isr],
  
  // Invalida√ß√£o completa (usar com cuidado)
  full: Object.values(CACHE_TAGS).filter(tag => typeof tag === 'string'),
};

// üìà NEXT.JS 15 COMPATIBILITY CHECK
export const validateNextJSCompatibility = () => {
  const nextVersion = process.env.NEXT_RUNTIME || 'unknown';
  const isAppRouter = true; // Assumindo App Router
  const hasUnstableCache = typeof unstable_cache !== 'undefined';
    logISR('Compatibility', 'ISR System Check', {
    nextVersion,
    appRouter: isAppRouter,
    unstableCache: hasUnstableCache,
    environment: isDevelopment ? 'development' : 'production',
    preview: isPreview,
  });
  
  return {
    compatible: isAppRouter && hasUnstableCache,
    version: '15.2.4',
    features: ['generateStaticParams', 'revalidate', 'unstable_cache']
  };
};

// üéØ EXPORT PRINCIPAIS para uso nos componentes
export const ISR_TIMES = ISR_CONFIG.pages;
export const CONTENT_CACHE_TIMES = ISR_CONFIG.content;

// Log inicial do sistema
if (isDevelopment) {
  console.log('üèóÔ∏è ISR Configuration loaded for Next.js 15:', {
    environment: isDevelopment ? 'development' : 'production',
    config: ISR_CONFIG,
    compatibility: validateNextJSCompatibility()
  });
}
