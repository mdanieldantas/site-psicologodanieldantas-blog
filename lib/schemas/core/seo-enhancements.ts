/**
 * üöÄ TIPOS PARA MELHORIAS SEO 2025
 * 
 * Tipos espec√≠ficos para as melhorias identificadas pelo relat√≥rio SEO,
 * implementando padr√µes Google 2025 sem quebrar o sistema existente.
 * 
 * üìã CARACTER√çSTICAS:
 * - E-A-T (Expertise, Authoritativeness, Trustworthiness)
 * - Rich Results otimizados
 * - Fallbacks inteligentes
 * - Extra√ß√£o autom√°tica de dados
 * 
 * @author GitHub Copilot & Daniel Dantas
 * @date 2025-06-18
 * @version 1.0.0 - SEO Enhancements
 */

import type { SchemaTypeEnum } from './types';

// ==========================================
// üè• E-A-T (EXPERTISE, AUTHORITATIVENESS, TRUSTWORTHINESS)
// ==========================================

/**
 * Dados de autoridade m√©dica/psicol√≥gica (E-A-T)
 */
export interface MedicalAuthorityData {
  /** Credenciais profissionais */
  credentials: MedicalCredential[];
  
  /** Especialidade m√©dica principal */
  primarySpecialty: string;
  
  /** √Åreas de expertise */
  expertiseAreas: string[];
  
  /** Organiza√ß√£o profissional */
  professionalAffiliation?: OrganizationData;
  
  /** Licen√ßas e certifica√ß√µes */
  licenses: string[];
  
  /** Anos de experi√™ncia */
  yearsOfExperience?: number;
  
  /** URL de verifica√ß√£o profissional */
  verificationUrl?: string;
}

/**
 * Credencial m√©dica individual
 */
export interface MedicalCredential {
  /** Tipo de credencial */
  credentialCategory: string;
  
  /** Nome da credencial */
  name: string;
  
  /** Organiza√ß√£o que reconhece */
  recognizedBy: OrganizationData;
  
  /** Data de obten√ß√£o */
  dateObtained?: string;
  
  /** Data de expira√ß√£o */
  expiryDate?: string;
  
  /** URL de verifica√ß√£o */
  verificationUrl?: string;
}

/**
 * Dados de organiza√ß√£o
 */
export interface OrganizationData {
  /** Nome da organiza√ß√£o */
  name: string;
  
  /** URL oficial */
  url?: string;
  
  /** Tipo de organiza√ß√£o */
  type?: string;
  
  /** Pa√≠s/regi√£o */
  location?: string;
}

/**
 * Dados de revis√£o m√©dica
 */
export interface MedicalReviewData {
  /** Data da √∫ltima revis√£o */
  lastReviewed: string;
  
  /** Revisor respons√°vel */
  reviewedBy: ReviewerData;
  
  /** Processo de revis√£o */
  reviewProcess?: string;
  
  /** Pr√≥xima revis√£o agendada */
  nextReviewDate?: string;
  
  /** Vers√£o do conte√∫do */
  contentVersion?: string;
}

/**
 * Dados do revisor
 */
export interface ReviewerData {
  /** Nome do revisor */
  name: string;
  
  /** Credenciais */
  credentials: string[];
  
  /** Organiza√ß√£o */
  affiliation?: string;
  
  /** URL de perfil */
  profileUrl?: string;
}

// ==========================================
// üìã RICH RESULTS ESTRUTURADOS
// ==========================================

/**
 * Dados para HowTo Rich Results
 */
export interface HowToData {
  /** Nome do procedimento */
  name: string;
  
  /** Descri√ß√£o do procedimento */
  description: string;
  
  /** Tempo total estimado */
  totalTime: string; // ISO 8601 duration (PT15M)
  
  /** Custo estimado */
  estimatedCost?: MonetaryAmount;
  
  /** Passos estruturados */
  steps: HowToStep[];
  
  /** Ferramentas necess√°rias */
  tools?: HowToTool[];
  
  /** Materiais necess√°rios */
  supplies?: HowToSupply[];
  
  /** Confian√ßa na extra√ß√£o */
  extractionConfidence: number;
}

/**
 * Passo individual do HowTo
 */
export interface HowToStep {
  /** Tipo Schema.org */
  '@type': 'HowToStep';
  
  /** Nome do passo */
  name: string;
  
  /** Texto explicativo */
  text: string;
  
  /** Posi√ß√£o na sequ√™ncia */
  position: number;
  
  /** URL da imagem (opcional) */
  image?: string;
  
  /** URL do v√≠deo (opcional) */
  video?: string;
  
  /** Tempo estimado para este passo */
  timeRequired?: string;
  
  /** Dicas adicionais */
  tip?: string;
}

/**
 * Ferramenta necess√°ria para HowTo
 */
export interface HowToTool {
  /** Tipo Schema.org */
  '@type': 'HowToTool';
  
  /** Nome da ferramenta */
  name: string;
  
  /** Descri√ß√£o */
  description?: string;
}

/**
 * Material necess√°rio para HowTo
 */
export interface HowToSupply {
  /** Tipo Schema.org */
  '@type': 'HowToSupply';
  
  /** Nome do material */
  name: string;
  
  /** Descri√ß√£o */
  description?: string;
  
  /** Quantidade */
  quantity?: string;
}

/**
 * Valor monet√°rio
 */
export interface MonetaryAmount {
  /** Tipo Schema.org */
  '@type': 'MonetaryAmount';
  
  /** Valor */
  value: number;
  
  /** Moeda */
  currency: string;
}

/**
 * Dados para FAQ Rich Results aprimorado
 */
export interface EnhancedFAQData {
  /** Perguntas estruturadas */
  questions: EnhancedFAQQuestion[];
  
  /** Categoria das perguntas */
  category?: string;
  
  /** Audi√™ncia-alvo */
  audience?: string;
  
  /** Data da √∫ltima atualiza√ß√£o */
  lastUpdated?: string;
  
  /** Confian√ßa na estrutura√ß√£o */
  structuringConfidence: number;
}

/**
 * Pergunta FAQ aprimorada
 */
export interface EnhancedFAQQuestion {
  /** Texto da pergunta */
  question: string;
  
  /** Resposta completa */
  answer: string;
  
  /** Autor da resposta */
  author?: string;
  
  /** Categoria da pergunta */
  category?: string;
  
  /** Palavras-chave relacionadas */
  keywords?: string[];
  
  /** Data da resposta */
  dateAnswered?: string;
  
  /** Confian√ßa na resposta */
  answerConfidence?: number;
}

/**
 * Dados para VideoObject aprimorado
 */
export interface EnhancedVideoData {
  /** Nome do v√≠deo */
  name: string;
  
  /** Descri√ß√£o */
  description: string;
  
  /** URL do conte√∫do */
  contentUrl: string;
  
  /** URL para embed */
  embedUrl?: string;
  
  /** Dura√ß√£o (ISO 8601) */
  duration?: string;
  
  /** Data de upload */
  uploadDate?: string;
  
  /** URL da thumbnail */
  thumbnailUrl?: string;
  
  /** Transcri√ß√£o */
  transcript?: string;
  
  /** Idioma */
  inLanguage?: string;
  
  /** Visualiza√ß√µes */
  interactionCount?: number;
}

/**
 * Dados para PodcastEpisode aprimorado
 */
export interface EnhancedPodcastData {
  /** Nome do epis√≥dio */
  name: string;
  
  /** Descri√ß√£o */
  description: string;
  
  /** URL do √°udio */
  contentUrl: string;
  
  /** Dura√ß√£o (ISO 8601) */
  duration?: string;
  
  /** Data de publica√ß√£o */
  datePublished?: string;
  
  /** N√∫mero do epis√≥dio */
  episodeNumber?: number;
  
  /** Temporada */
  partOfSeason?: number;
  
  /** S√©rie/Podcast pai */
  partOfSeries?: PodcastSeriesData;
  
  /** Transcri√ß√£o */
  transcript?: string;
  
  /** T√≥picos abordados */
  about?: string[];
}

/**
 * Dados da s√©rie de podcast
 */
export interface PodcastSeriesData {
  /** Tipo Schema.org */
  '@type': 'PodcastSeries';
  
  /** Nome da s√©rie */
  name: string;
  
  /** Descri√ß√£o */
  description?: string;
  
  /** URL da s√©rie */
  url?: string;
}

// ==========================================
// üîç EXTRA√á√ÉO AUTOM√ÅTICA
// ==========================================

/**
 * Resultado da extra√ß√£o autom√°tica de dados
 */
export interface AutoExtractionResult<T> {
  /** Dados extra√≠dos */
  data: T;
  
  /** Confian√ßa na extra√ß√£o (0-1) */
  confidence: number;
  
  /** M√©todo usado para extra√ß√£o */
  extractionMethod: ExtractionMethod;
  
  /** Warnings durante extra√ß√£o */
  warnings: string[];
  
  /** Tempo de extra√ß√£o em ms */
  extractionTime: number;
}

/**
 * M√©todos de extra√ß√£o autom√°tica
 */
export type ExtractionMethod = 
  | 'content-analysis'    // An√°lise do conte√∫do HTML
  | 'heading-structure'   // Estrutura de cabe√ßalhos
  | 'list-detection'      // Detec√ß√£o de listas
  | 'pattern-matching'    // Padr√µes no texto
  | 'ai-inference'        // Infer√™ncia por IA
  | 'fallback-generation' // Gera√ß√£o de fallback
  | 'manual-override';    // Override manual

/**
 * Configura√ß√£o para extra√ß√£o autom√°tica
 */
export interface ExtractionConfig {
  /** Habilitar extra√ß√£o autom√°tica */
  enableAutoExtraction: boolean;
  
  /** Confian√ßa m√≠nima para usar extra√ß√£o */
  minimumConfidence: number;
  
  /** Timeout para extra√ß√£o em ms */
  extractionTimeout: number;
  
  /** M√©todos habilitados */
  enabledMethods: ExtractionMethod[];
  
  /** Usar fallbacks se extra√ß√£o falhar */
  useFallbacks: boolean;
}

// ==========================================
// üéØ SCHEMA 2025 ENHANCEMENTS
// ==========================================

/**
 * Extens√µes para Article/BlogPosting 2025
 */
export interface Article2025Extensions {
  /** Conte√∫do falado (voice search) */
  speakable?: SpeakableSpecification;
  
  /** Hist√≥ria por tr√°s do artigo */
  backstory?: string;
  
  /** Corre√ß√µes editoriais */
  correction?: CorrectionData[];
  
  /** Informa√ß√µes de financiamento */
  funding?: string;
  
  /** Tempo de refer√™ncia do conte√∫do */
  contentReferenceTime?: string;
  
  /** Cobertura temporal */
  temporalCoverage?: string;
}

/**
 * Especifica√ß√£o para conte√∫do falado
 */
export interface SpeakableSpecification {
  /** Tipo Schema.org */
  '@type': 'SpeakableSpecification';
  
  /** Seletores CSS para conte√∫do falado */
  cssSelector?: string[];
  
  /** XPath para conte√∫do falado */
  xpath?: string[];
}

/**
 * Dados de corre√ß√£o editorial
 */
export interface CorrectionData {
  /** Tipo Schema.org */
  '@type': 'CorrectionNotice';
  
  /** URL da vers√£o original */
  url?: string;
  
  /** Data da corre√ß√£o */
  datePublished: string;
  
  /** Texto da corre√ß√£o */
  text: string;
}

/**
 * Dados para conte√∫do m√©dico especializado
 */
export interface MedicalContentData {
  /** Audi√™ncia m√©dica espec√≠fica */
  medicalAudience?: MedicalAudienceType[];
  
  /** Condi√ß√µes m√©dicas abordadas */
  about?: MedicalConditionData[];
  
  /** Especialidade m√©dica */
  specialty?: string;
  
  /** N√≠vel de evid√™ncia */
  evidenceLevel?: EvidenceLevel;
  
  /** Conte√∫do principal da p√°gina */
  mainContentOfPage?: string[];
}

/**
 * Tipos de audi√™ncia m√©dica
 */
export type MedicalAudienceType = 
  | 'Patient'
  | 'MedicalProfessional'
  | 'Caregiver'
  | 'Student'
  | 'Researcher';

/**
 * Dados de condi√ß√£o m√©dica
 */
export interface MedicalConditionData {
  /** Tipo Schema.org */
  '@type': 'MedicalCondition';
  
  /** Nome da condi√ß√£o */
  name: string;
  
  /** Nomes alternativos */
  alternateName?: string[];
  
  /** C√≥digo m√©dico */
  code?: MedicalCodeData;
  
  /** Sinais e sintomas */
  signOrSymptom?: string[];
}

/**
 * C√≥digo m√©dico
 */
export interface MedicalCodeData {
  /** Tipo Schema.org */
  '@type': 'MedicalCode';
  
  /** Valor do c√≥digo */
  codeValue: string;
  
  /** Sistema de codifica√ß√£o */
  codingSystem: string;
  
  /** URL de refer√™ncia */
  url?: string;
}

/**
 * N√≠veis de evid√™ncia m√©dica
 */
export type EvidenceLevel = 
  | 'EvidenceLevelA'
  | 'EvidenceLevelB' 
  | 'EvidenceLevelC'
  | 'EvidenceLevelD'
  | 'ExpertOpinion';

// ==========================================
// üõ†Ô∏è UTILIDADES DE DESENVOLVIMENTO
// ==========================================

/**
 * Resultado de valida√ß√£o SEO
 */
export interface SEOValidationResult {
  /** Schema √© v√°lido */
  isValid: boolean;
  
  /** Pontua√ß√£o SEO (0-100) */
  seoScore: number;
  
  /** Avisos de otimiza√ß√£o */
  optimizationWarnings: string[];
  
  /** Sugest√µes de melhoria */
  improvements: string[];
  
  /** Compatibilidade com Rich Results */
  richResultsCompatibility: RichResultType[];
  
  /** Campos faltantes para otimiza√ß√£o */
  missingFields: string[];
}

/**
 * Tipos de Rich Results suportados
 */
export type RichResultType = 
  | 'Article'
  | 'BlogPosting'
  | 'FAQ'
  | 'HowTo'
  | 'Video'
  | 'Podcast'
  | 'Event'
  | 'Review'
  | 'Course'
  | 'Medical'
  | 'Recipe'
  | 'BreadcrumbList';

/**
 * M√©tricas de performance do schema
 */
export interface SchemaPerformanceMetrics {
  /** Tempo de gera√ß√£o em ms */
  generationTime: number;
  
  /** Tamanho do schema em bytes */
  schemaSize: number;
  
  /** N√∫mero de campos */
  fieldCount: number;
  
  /** Mem√≥ria utilizada em MB */
  memoryUsage: number;
  
  /** Cache hit ratio */
  cacheHitRatio?: number;
}

/**
 * Configura√ß√£o avan√ßada de gera√ß√£o
 */
export interface AdvancedGenerationConfig {
  /** Habilitar cache */
  enableCaching: boolean;
  
  /** TTL do cache em minutos */
  cacheTTL: number;
  
  /** Habilitar compress√£o */
  enableCompression: boolean;
  
  /** N√≠vel de verbosidade dos logs */
  logLevel: 'silent' | 'error' | 'warn' | 'info' | 'debug';
  
  /** Validar schema contra Schema.org */
  validateAgainstSchemaOrg: boolean;
  
  /** Incluir metadados de debug */
  includeDebugMetadata: boolean;
}

// ==========================================
// üöÄ EXPORTA√á√ïES PRINCIPAIS
// ==========================================
// Tipos j√° s√£o exportados via declara√ß√£o das interfaces acima
